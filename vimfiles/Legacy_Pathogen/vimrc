" Maintainer:	Konstantin Milchev <konstantin.milchev@gmail.com>
" Last change:	2022 November 4  

" Pathogen config
source ~/vimfiles/autoload/pathogen.vim "location of my pathogen.vim
call pathogen#infect('bundle/{}')
call pathogen#helptags()
" runtime bundle/vim-pathogen/autoload/pathogen.vim


" set vim font
"set guifont=Consolas:h10 (Stopped using November 2022)
set guifont=Roboto_Mono_Light:h16:W300:cANSI:qDRAFT

" set window size 
set lines=35 columns=125

" set window size 
winpos 1250 700

" set noundo filetype
set noundofile

" Detection, Plugin, Indent
filetype plugin indent on

" syntax 
syntax on

" Buffers
"Move to the previous buffer with "gp"
nnoremap gp :bp<CR>
" Move to the next buffer with "gn"
nnoremap gn :bn<CR>
" List all possible buffers with "gl"
nnoremap gl :ls<CR>
" List all possible buffers with "gb" and accept a new buffer argument [1]
nnoremap gb :ls<CR>:b
" Unbind Escape Key in insert mode. Bind 'jk' or 'kj'.

" Mappings

map <silent> <S-F11> /\A*\zs\a<cr>

" non-compatible mode
set nocp

" NERDTree
" autocmd vimenter * NERDTree
nmap <F6> :NERDTreeToggle<CR>

filetype plugin on
"let g:instant_markdown_open_to_the_world = 1
"Uncomment to override defaults:
"let g:instant_markdown_slow = 1
"let g:instant_markdown_autostart = 1
"let g:instant_markdown_allow_unsafe_content = 1
"let g:instant_markdown_allow_external_content = 0
"let g:instant_markdown_mathjax = 1
"let g:instant_markdown_mermaid = 1
"let g:instant_markdown_logfile = 'C:\Users\kmilchev\vimfiles\bundle\vim-instant-markdown\logs'
"let g:instant_markdown_autoscroll = 0
"let g:instant_markdown_port = 8090
"let g:instant_markdown_python = 1
set colorcolumn=160 number

 "Example: To display images automatically on buffer write.
" let vim_markdown_preview_toggle=2
" let vim_markdown_preview_browser='Google Chrome'

" Color Scheme
colorscheme gruvbox


"Mappings
ino <esc> <nop>
ino jk <esc>:w<cr>
ino kj <esc>:w<cr>
nnoremap <F4> :exe ':silent !"c:\Program Files\Firefox Developer Edition\firefox.exe" %'<CR>


" Functions 
function ToFirefox()
"    silent '<,'>w ! python -m markdown -f tmp.html | start tmp.html
     :!open -a Firefox %
endfunction
